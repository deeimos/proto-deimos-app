// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: forecast-api/forecast-api.proto

package forecast_api1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForecastRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	HoursAhead    int32                  `protobuf:"varint,2,opt,name=hours_ahead,json=hoursAhead,proto3" json:"hours_ahead,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForecastRequest) Reset() {
	*x = ForecastRequest{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForecastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastRequest) ProtoMessage() {}

func (x *ForecastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastRequest.ProtoReflect.Descriptor instead.
func (*ForecastRequest) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{0}
}

func (x *ForecastRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ForecastRequest) GetHoursAhead() int32 {
	if x != nil {
		return x.HoursAhead
	}
	return 0
}

type ForecastResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Forecasts     []*ForecastPoint       `protobuf:"bytes,2,rep,name=forecasts,proto3" json:"forecasts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForecastResponse) Reset() {
	*x = ForecastResponse{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForecastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastResponse) ProtoMessage() {}

func (x *ForecastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastResponse.ProtoReflect.Descriptor instead.
func (*ForecastResponse) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{1}
}

func (x *ForecastResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ForecastResponse) GetForecasts() []*ForecastPoint {
	if x != nil {
		return x.Forecasts
	}
	return nil
}

type ForecastStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForecastStreamRequest) Reset() {
	*x = ForecastStreamRequest{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForecastStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastStreamRequest) ProtoMessage() {}

func (x *ForecastStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastStreamRequest.ProtoReflect.Descriptor instead.
func (*ForecastStreamRequest) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{2}
}

func (x *ForecastStreamRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type ForecastPoint struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Timestamp               *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CpuLoad                 float64                `protobuf:"fixed64,2,opt,name=cpu_load,json=cpuLoad,proto3" json:"cpu_load,omitempty"`
	MemoryLoad              float64                `protobuf:"fixed64,3,opt,name=memory_load,json=memoryLoad,proto3" json:"memory_load,omitempty"`
	DiskUsage               float64                `protobuf:"fixed64,4,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	LoadAvg_1               float64                `protobuf:"fixed64,5,opt,name=load_avg_1,json=loadAvg1,proto3" json:"load_avg_1,omitempty"`
	LoadAvg_5               float64                `protobuf:"fixed64,6,opt,name=load_avg_5,json=loadAvg5,proto3" json:"load_avg_5,omitempty"`
	NetworkRx               float64                `protobuf:"fixed64,7,opt,name=network_rx,json=networkRx,proto3" json:"network_rx,omitempty"`
	NetworkTx               float64                `protobuf:"fixed64,8,opt,name=network_tx,json=networkTx,proto3" json:"network_tx,omitempty"`
	AvailabilityProbability float64                `protobuf:"fixed64,9,opt,name=availability_probability,json=availabilityProbability,proto3" json:"availability_probability,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ForecastPoint) Reset() {
	*x = ForecastPoint{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForecastPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForecastPoint) ProtoMessage() {}

func (x *ForecastPoint) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForecastPoint.ProtoReflect.Descriptor instead.
func (*ForecastPoint) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{3}
}

func (x *ForecastPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ForecastPoint) GetCpuLoad() float64 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *ForecastPoint) GetMemoryLoad() float64 {
	if x != nil {
		return x.MemoryLoad
	}
	return 0
}

func (x *ForecastPoint) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *ForecastPoint) GetLoadAvg_1() float64 {
	if x != nil {
		return x.LoadAvg_1
	}
	return 0
}

func (x *ForecastPoint) GetLoadAvg_5() float64 {
	if x != nil {
		return x.LoadAvg_5
	}
	return 0
}

func (x *ForecastPoint) GetNetworkRx() float64 {
	if x != nil {
		return x.NetworkRx
	}
	return 0
}

func (x *ForecastPoint) GetNetworkTx() float64 {
	if x != nil {
		return x.NetworkTx
	}
	return 0
}

func (x *ForecastPoint) GetAvailabilityProbability() float64 {
	if x != nil {
		return x.AvailabilityProbability
	}
	return 0
}

type AddServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServerRequest) Reset() {
	*x = AddServerRequest{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServerRequest) ProtoMessage() {}

func (x *AddServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServerRequest.ProtoReflect.Descriptor instead.
func (*AddServerRequest) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{4}
}

func (x *AddServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type RemoveServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveServerRequest) Reset() {
	*x = RemoveServerRequest{}
	mi := &file_forecast_api_forecast_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServerRequest) ProtoMessage() {}

func (x *RemoveServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_forecast_api_forecast_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServerRequest.ProtoReflect.Descriptor instead.
func (*RemoveServerRequest) Descriptor() ([]byte, []int) {
	return file_forecast_api_forecast_api_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

var File_forecast_api_forecast_api_proto protoreflect.FileDescriptor

var file_forecast_api_forecast_api_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a,
	0x0f, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x61, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x41, 0x68, 0x65, 0x61, 0x64, 0x22, 0x6a,
	0x0a, 0x10, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x09, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x22, 0x34, 0x0a, 0x15, 0x46, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xd9, 0x02, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x70, 0x75, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x63, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x69,
	0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x61, 0x76, 0x67, 0x5f, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x76, 0x67, 0x31, 0x12, 0x1c, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76,
	0x67, 0x5f, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x76, 0x67, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x78, 0x12, 0x39, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a,
	0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x32, 0xe8, 0x02, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x41, 0x50,
	0x49, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74,
	0x12, 0x1d, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x50, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12,
	0x21, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24,
	0x64, 0x65, 0x69, 0x6d, 0x6f, 0x73, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x3b, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_forecast_api_forecast_api_proto_rawDescOnce sync.Once
	file_forecast_api_forecast_api_proto_rawDescData []byte
)

func file_forecast_api_forecast_api_proto_rawDescGZIP() []byte {
	file_forecast_api_forecast_api_proto_rawDescOnce.Do(func() {
		file_forecast_api_forecast_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_forecast_api_forecast_api_proto_rawDesc), len(file_forecast_api_forecast_api_proto_rawDesc)))
	})
	return file_forecast_api_forecast_api_proto_rawDescData
}

var file_forecast_api_forecast_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_forecast_api_forecast_api_proto_goTypes = []any{
	(*ForecastRequest)(nil),       // 0: forecast_api.ForecastRequest
	(*ForecastResponse)(nil),      // 1: forecast_api.ForecastResponse
	(*ForecastStreamRequest)(nil), // 2: forecast_api.ForecastStreamRequest
	(*ForecastPoint)(nil),         // 3: forecast_api.ForecastPoint
	(*AddServerRequest)(nil),      // 4: forecast_api.AddServerRequest
	(*RemoveServerRequest)(nil),   // 5: forecast_api.RemoveServerRequest
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_forecast_api_forecast_api_proto_depIdxs = []int32{
	3, // 0: forecast_api.ForecastResponse.forecasts:type_name -> forecast_api.ForecastPoint
	6, // 1: forecast_api.ForecastPoint.timestamp:type_name -> google.protobuf.Timestamp
	0, // 2: forecast_api.ForecastAPI.GetForecast:input_type -> forecast_api.ForecastRequest
	2, // 3: forecast_api.ForecastAPI.StreamForecastUpdates:input_type -> forecast_api.ForecastStreamRequest
	4, // 4: forecast_api.ForecastAPI.AddServerToScheduler:input_type -> forecast_api.AddServerRequest
	5, // 5: forecast_api.ForecastAPI.RemoveServerFromScheduler:input_type -> forecast_api.RemoveServerRequest
	1, // 6: forecast_api.ForecastAPI.GetForecast:output_type -> forecast_api.ForecastResponse
	3, // 7: forecast_api.ForecastAPI.StreamForecastUpdates:output_type -> forecast_api.ForecastPoint
	7, // 8: forecast_api.ForecastAPI.AddServerToScheduler:output_type -> google.protobuf.Empty
	7, // 9: forecast_api.ForecastAPI.RemoveServerFromScheduler:output_type -> google.protobuf.Empty
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_forecast_api_forecast_api_proto_init() }
func file_forecast_api_forecast_api_proto_init() {
	if File_forecast_api_forecast_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_forecast_api_forecast_api_proto_rawDesc), len(file_forecast_api_forecast_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_forecast_api_forecast_api_proto_goTypes,
		DependencyIndexes: file_forecast_api_forecast_api_proto_depIdxs,
		MessageInfos:      file_forecast_api_forecast_api_proto_msgTypes,
	}.Build()
	File_forecast_api_forecast_api_proto = out.File
	file_forecast_api_forecast_api_proto_goTypes = nil
	file_forecast_api_forecast_api_proto_depIdxs = nil
}
