// @generated by protoc-gen-es v1.10.1 with parameter "target=js+dts"
// @generated from file proto/public-api/public-servers.proto (package public_api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message public_api.CreateServerRequest
 */
export declare class CreateServerRequest extends Message<CreateServerRequest> {
  /**
   * @generated from field: string encrypted_ip = 1;
   */
  encryptedIp: string;

  /**
   * @generated from field: string encrypted_port = 2;
   */
  encryptedPort: string;

  /**
   * @generated from field: string encrypted_display_name = 3;
   */
  encryptedDisplayName: string;

  /**
   * @generated from field: bool is_monitoring_enabled = 5;
   */
  isMonitoringEnabled: boolean;

  constructor(data?: PartialMessage<CreateServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.CreateServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateServerRequest;

  static equals(a: CreateServerRequest | PlainMessage<CreateServerRequest> | undefined, b: CreateServerRequest | PlainMessage<CreateServerRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.CreateServerResponse
 */
export declare class CreateServerResponse extends Message<CreateServerResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<CreateServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.CreateServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateServerResponse;

  static equals(a: CreateServerResponse | PlainMessage<CreateServerResponse> | undefined, b: CreateServerResponse | PlainMessage<CreateServerResponse> | undefined): boolean;
}

/**
 * @generated from message public_api.UpdateServerRequest
 */
export declare class UpdateServerRequest extends Message<UpdateServerRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string encrypted_ip = 2;
   */
  encryptedIp: string;

  /**
   * @generated from field: string encrypted_port = 3;
   */
  encryptedPort: string;

  /**
   * @generated from field: string encrypted_display_name = 4;
   */
  encryptedDisplayName: string;

  /**
   * @generated from field: bool is_monitoring_enabled = 5;
   */
  isMonitoringEnabled: boolean;

  constructor(data?: PartialMessage<UpdateServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.UpdateServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServerRequest;

  static equals(a: UpdateServerRequest | PlainMessage<UpdateServerRequest> | undefined, b: UpdateServerRequest | PlainMessage<UpdateServerRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.UpdateServerResponse
 */
export declare class UpdateServerResponse extends Message<UpdateServerResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<UpdateServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.UpdateServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateServerResponse;

  static equals(a: UpdateServerResponse | PlainMessage<UpdateServerResponse> | undefined, b: UpdateServerResponse | PlainMessage<UpdateServerResponse> | undefined): boolean;
}

/**
 * @generated from message public_api.GetServerRequest
 */
export declare class GetServerRequest extends Message<GetServerRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.GetServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServerRequest;

  static equals(a: GetServerRequest | PlainMessage<GetServerRequest> | undefined, b: GetServerRequest | PlainMessage<GetServerRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.GetServerResponse
 */
export declare class GetServerResponse extends Message<GetServerResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string encrypted_ip = 2;
   */
  encryptedIp: string;

  /**
   * @generated from field: string encrypted_port = 3;
   */
  encryptedPort: string;

  /**
   * @generated from field: string encrypted_display_name = 4;
   */
  encryptedDisplayName: string;

  /**
   * @generated from field: bool is_monitoring_enabled = 5;
   */
  isMonitoringEnabled: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<GetServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.GetServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServerResponse;

  static equals(a: GetServerResponse | PlainMessage<GetServerResponse> | undefined, b: GetServerResponse | PlainMessage<GetServerResponse> | undefined): boolean;
}

/**
 * @generated from message public_api.GetServersListRequest
 */
export declare class GetServersListRequest extends Message<GetServersListRequest> {
  constructor(data?: PartialMessage<GetServersListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.GetServersListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServersListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServersListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServersListRequest;

  static equals(a: GetServersListRequest | PlainMessage<GetServersListRequest> | undefined, b: GetServersListRequest | PlainMessage<GetServersListRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.GetServersListResponse
 */
export declare class GetServersListResponse extends Message<GetServersListResponse> {
  /**
   * @generated from field: repeated public_api.GetServerResponse servers = 1;
   */
  servers: GetServerResponse[];

  constructor(data?: PartialMessage<GetServersListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.GetServersListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetServersListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetServersListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetServersListResponse;

  static equals(a: GetServersListResponse | PlainMessage<GetServersListResponse> | undefined, b: GetServersListResponse | PlainMessage<GetServersListResponse> | undefined): boolean;
}

/**
 * @generated from message public_api.DeleteServerRequest
 */
export declare class DeleteServerRequest extends Message<DeleteServerRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteServerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.DeleteServerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServerRequest;

  static equals(a: DeleteServerRequest | PlainMessage<DeleteServerRequest> | undefined, b: DeleteServerRequest | PlainMessage<DeleteServerRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.DeleteServerResponse
 */
export declare class DeleteServerResponse extends Message<DeleteServerResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteServerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.DeleteServerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteServerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteServerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteServerResponse;

  static equals(a: DeleteServerResponse | PlainMessage<DeleteServerResponse> | undefined, b: DeleteServerResponse | PlainMessage<DeleteServerResponse> | undefined): boolean;
}

