// @generated by protoc-gen-es v1.10.1 with parameter "target=js+dts"
// @generated from file proto/public-api/public-monitoring.proto (package public_api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message public_api.PublicServerMetricsRequest
 */
export declare class PublicServerMetricsRequest extends Message<PublicServerMetricsRequest> {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  constructor(data?: PartialMessage<PublicServerMetricsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.PublicServerMetricsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicServerMetricsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicServerMetricsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicServerMetricsRequest;

  static equals(a: PublicServerMetricsRequest | PlainMessage<PublicServerMetricsRequest> | undefined, b: PublicServerMetricsRequest | PlainMessage<PublicServerMetricsRequest> | undefined): boolean;
}

/**
 * @generated from message public_api.PublicServerMetric
 */
export declare class PublicServerMetric extends Message<PublicServerMetric> {
  /**
   * @generated from field: double cpu_usage = 1;
   */
  cpuUsage: number;

  /**
   * @generated from field: double memory_usage = 2;
   */
  memoryUsage: number;

  /**
   * @generated from field: double disk_usage = 3;
   */
  diskUsage: number;

  /**
   * @generated from field: double load_avg_1 = 4;
   */
  loadAvg1: number;

  /**
   * @generated from field: double load_avg_5 = 5;
   */
  loadAvg5: number;

  /**
   * @generated from field: double load_avg_15 = 6;
   */
  loadAvg15: number;

  /**
   * @generated from field: double network_rx = 7;
   */
  networkRx: number;

  /**
   * @generated from field: double network_tx = 8;
   */
  networkTx: number;

  /**
   * @generated from field: double disk_read = 9;
   */
  diskRead: number;

  /**
   * @generated from field: double disk_write = 10;
   */
  diskWrite: number;

  /**
   * @generated from field: int32 process_count = 11;
   */
  processCount: number;

  /**
   * @generated from field: double io_wait = 12;
   */
  ioWait: number;

  /**
   * @generated from field: int64 uptime_seconds = 13;
   */
  uptimeSeconds: bigint;

  /**
   * @generated from field: double temperature = 14;
   */
  temperature: number;

  /**
   * @generated from field: string status = 15;
   */
  status: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 16;
   */
  timestamp?: Timestamp;

  constructor(data?: PartialMessage<PublicServerMetric>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "public_api.PublicServerMetric";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicServerMetric;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicServerMetric;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicServerMetric;

  static equals(a: PublicServerMetric | PlainMessage<PublicServerMetric> | undefined, b: PublicServerMetric | PlainMessage<PublicServerMetric> | undefined): boolean;
}

